/*
  Thunker - takes your module API and return thunk API of this module
*/
"use strict"

module.exports = function (module) {
  var methods = getAllMethods(module);
  var thunkedApi = {};
  methods.forEach(function (name) {
    if (!module[name]) return; // No method. Leave.
    thunkedApi[name] = wrap(module[name]);
  });
  return thunkedApi;
};


// Private module methods

//This funtion returns all methods of module
function getAllMethods(module) {
  var methods = [];
  for (var key in module) {
    if (module.hasOwnProperty(key) && typeof module[key] == 'function') {
      methods.push(key);
    }
  }
  return methods;
};

//Make thunk from async method
function wrap(fn, ctx) {
  return function () {
    var args = [].slice.call(arguments);
    return function (done) {
      args.push(done);
      fn.apply(ctx || this, args);
    }
  }
};
