"use strict";
require('traceur-source-maps').install(require('traceur'));
var Character = require('./modules_character');
var Monster = function Monster(x, y, name) {
  $traceurRuntime.superCall(this, $Monster.prototype, "constructor", [x, y]);
  console.log('Ctoring Monster');
  this.name = name;
  this.health_ = 100;
};
var $Monster = Monster;
($traceurRuntime.createClass)(Monster, {
  attack: function(character) {
    $traceurRuntime.superCall(this, $Monster.prototype, "attack", [character]);
  },
  get isAlive() {
    return this.health_ > 0;
  },
  get health() {
    return this.health_;
  },
  set health(value) {
    if (value < 0)
      throw new Error('Health must be non-negative.');
    this.health_ = value;
  }
}, {}, Character);
module.exports = Monster;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXNfbW9uc3Rlci5lczYuanMiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvNCIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci83IiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzkiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQU0sQUFBQyxDQUFDLHFCQUFvQixDQUFDLFFBQVEsQUFBQyxDQUFDLE9BQU0sQUFBQyxDQUFDLFNBQVEsQ0FBQyxDQUFDLENBQUM7RUFBSyxDQUFBLFNBQVEsRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLHFCQUFvQixDQUFDO0FDQXhHLEFBQUksRUFBQSxVREVKLFNBQU0sUUFBTSxDQUNFLENBQUEsQ0FBRyxDQUFBLENBQUEsQ0FBRyxDQUFBLElBQUcsQ0FBRztBRUgxQixBRklJLGdCRUpVLFVBQVUsQUFBQywyQ0ZJZixDQUFBLENBQUcsRUFBQSxFRUh1QyxDRkdyQztBQUNYLFFBQU0sSUFBSSxBQUFDLENBQUMsaUJBQWdCLENBQUMsQ0FBQTtBQUM3QixLQUFHLEtBQUssRUFBSSxLQUFHLENBQUM7QUFDaEIsS0FBRyxRQUFRLEVBQUksSUFBRSxDQUFDO0FDUGtCLEFEUXRDLENDUnNDO0FFQXhDLEFBQUksRUFBQSxtQkFBb0MsQ0FBQTtBQ0F4QyxBQUFDLGVBQWMsWUFBWSxDQUFDLEFBQUM7QUpVM0IsT0FBSyxDQUFMLFVBQU8sU0FBUSxDQUFHO0FFVnBCLEFGV0ksa0JFWFUsVUFBVSxBQUFDLHNDRldSLFNBQVEsRUVWMkIsQ0ZVekI7RUFHekI7QUFFQSxJQUFJLFFBQU0sRUFBSTtBQUFFLFNBQU8sQ0FBQSxJQUFHLFFBQVEsRUFBSSxFQUFBLENBQUM7RUFBRTtBQUN6QyxJQUFJLE9BQUssRUFBSTtBQUFFLFNBQU8sQ0FBQSxJQUFHLFFBQVEsQ0FBQztFQUFFO0FBQ3BDLElBQUksT0FBSyxDQUFFLEtBQUksQ0FBRztBQUNoQixPQUFJLEtBQUksRUFBSSxFQUFBO0FBQUcsVUFBTSxJQUFJLE1BQUksQUFBQyxDQUFDLDhCQUE2QixDQUFDLENBQUM7QUFBQSxBQUM5RCxPQUFHLFFBQVEsRUFBSSxNQUFJLENBQUM7RUFDdEI7QUFBQSxLQW5Cb0IsVUFBUSxDSUQwQjtBSnVCeEQsS0FBSyxRQUFRLEVBQUksUUFBTSxDQUFBO0FBQUEiLCJmaWxlIjoibW9kdWxlc19tb25zdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgndHJhY2V1ci1zb3VyY2UtbWFwcycpLmluc3RhbGwocmVxdWlyZSgndHJhY2V1cicpKTtsZXQgQ2hhcmFjdGVyID0gcmVxdWlyZSgnLi9tb2R1bGVzX2NoYXJhY3RlcicpXG5cbmNsYXNzIE1vbnN0ZXIgZXh0ZW5kcyBDaGFyYWN0ZXIge1xuICBjb25zdHJ1Y3Rvcih4LCB5LCBuYW1lKSB7XG4gICAgc3VwZXIoeCwgeSk7XG4gICAgY29uc29sZS5sb2coJ0N0b3JpbmcgTW9uc3RlcicpXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLmhlYWx0aF8gPSAxMDA7XG4gIH1cblxuICBhdHRhY2soY2hhcmFjdGVyKSB7XG4gICAgc3VwZXIuYXR0YWNrKGNoYXJhY3Rlcik7XG4gICAgLy8gQ2FuIGFsc28gYmUgd3JpdHRlbiBhczpcbiAgICAvLyBzdXBlcihjaGFyYWN0ZXIpO1xuICB9XG5cbiAgZ2V0IGlzQWxpdmUoKSB7IHJldHVybiB0aGlzLmhlYWx0aF8gPiAwOyB9XG4gIGdldCBoZWFsdGgoKSB7IHJldHVybiB0aGlzLmhlYWx0aF87IH1cbiAgc2V0IGhlYWx0aCh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA8IDApIHRocm93IG5ldyBFcnJvcignSGVhbHRoIG11c3QgYmUgbm9uLW5lZ2F0aXZlLicpO1xuICAgIHRoaXMuaGVhbHRoXyA9IHZhbHVlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTW9uc3RlciIsInZhciAkX19wbGFjZWhvbGRlcl9fMCA9ICRfX3BsYWNlaG9sZGVyX18xIiwiJHRyYWNldXJSdW50aW1lLnN1cGVyQ2FsbCgkX19wbGFjZWhvbGRlcl9fMCwgJF9fcGxhY2Vob2xkZXJfXzEsICRfX3BsYWNlaG9sZGVyX18yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkX19wbGFjZWhvbGRlcl9fMykiLCJ2YXIgJF9fcGxhY2Vob2xkZXJfXzAgPSAkX19wbGFjZWhvbGRlcl9fMSIsIigkdHJhY2V1clJ1bnRpbWUuY3JlYXRlQ2xhc3MpKCRfX3BsYWNlaG9sZGVyX18wLCAkX19wbGFjZWhvbGRlcl9fMSwgJF9fcGxhY2Vob2xkZXJfXzIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkX19wbGFjZWhvbGRlcl9fMykiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=