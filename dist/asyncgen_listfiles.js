"use strict";
require('traceur-source-maps').install(require('traceur'));
var path = require('path');
var fs = require('fs');
var thunker = require('thunker');
var co = require('co');
var _ = require('lodash');
fs = thunker(fs);
function* statFile(filePath) {
  var stat;
  try {
    stat = yield fs.stat(filePath);
  } catch (e) {
    if (e.code !== 'ENOENT')
      throw e;
    return [];
  }
  if (stat.isDirectory()) {
    return yield listDir(filePath);
  } else {
    return filePath.replace(__dirname, '.');
  }
}
function* listDir(dir) {
  var files = yield fs.readdir(dir),
      fileNames,
      fileNamesIts;
  fileNamesIts = files.map(function(name) {
    var filePath = path.join(dir, name);
    return statFile(filePath);
  });
  fileNames = yield fileNamesIts;
  return _.flatten(fileNames);
}
co(function*() {
  (yield listDir(__dirname)).forEach(function(filePath) {
    console.log(filePath);
  });
})();
console.log('done.');

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jZ2VuX2xpc3RmaWxlcy5lczYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFNLEFBQUMsQ0FBQyxxQkFBb0IsQ0FBQyxRQUFRLEFBQUMsQ0FBQyxPQUFNLEFBQUMsQ0FBQyxTQUFRLENBQUMsQ0FBQyxDQUFDO0VBQ3RELENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDO0VBQ3JCLENBQUEsRUFBQyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsSUFBRyxDQUFDO0VBQ2pCLENBQUEsT0FBTSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsU0FBUSxDQUFDO0VBQzNCLENBQUEsRUFBQyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsSUFBRyxDQUFDO0VBQ2pCLENBQUEsQ0FBQSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsUUFBTyxDQUFDO0FBRXhCLENBQUMsRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFBO0FBRWYsUUFBVSxTQUFPLENBQUUsUUFBTztJQUNyQixDQUFBLElBQUc7QUFDUCxJQUFJO0FBRUgsT0FBRyxFQUFJLE1BQU0sQ0FBQSxFQUFDLEtBQUssQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFBO0VBQzlCLENBQUUsT0FBTSxDQUFBLENBQUc7QUFFVixPQUFJLENBQUEsS0FBSyxJQUFNLFNBQU87QUFBRyxVQUFNLEVBQUEsQ0FBQTtBQUFBLEFBQy9CLFNBQU8sR0FBQyxDQUFBO0VBQ1Q7QUFBQSxBQUlBLEtBQUksSUFBRyxZQUFZLEFBQUMsRUFBQyxDQUFHO0FBQ3ZCLFNBQU8sTUFBTSxDQUFBLE9BQU0sQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFBO0VBQzlCLEtBQU87QUFDTixTQUFPLENBQUEsUUFBTyxRQUFRLEFBQUMsQ0FBQyxTQUFRLENBQUcsSUFBRSxDQUFDLENBQUE7RUFDdkM7QUFBQSxBQUNEO0FBRUEsUUFBVSxRQUFNLENBQUUsR0FBRTtJQUVmLENBQUEsS0FBSSxFQUFJLE1BQU0sQ0FBQSxFQUFDLFFBQVEsQUFBQyxDQUFDLEdBQUUsQ0FBQztBQUM3QixjQUFRO0FBQ1IsaUJBQVc7QUFHZCxhQUFXLEVBQUksQ0FBQSxLQUFJLElBQUksQUFBQyxDQUFDLFNBQVMsSUFBRyxDQUFHO0FBQ3ZDLEFBQUksTUFBQSxDQUFBLFFBQU8sRUFBSSxDQUFBLElBQUcsS0FBSyxBQUFDLENBQUMsR0FBRSxDQUFHLEtBQUcsQ0FBQyxDQUFBO0FBQ2xDLFNBQU8sQ0FBQSxRQUFPLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQTtFQUN6QixDQUFDLENBQUE7QUFDRCxVQUFRLEVBQUksTUFBTSxhQUFXLENBQUE7QUFDN0IsT0FBTyxDQUFBLENBQUEsUUFBUSxBQUFDLENBQUMsU0FBUSxDQUFDLENBQUE7QUFDM0I7QUFFQSxDQUFDLEFBQUMsQ0FBQyxVQUFVLEFBQUMsQ0FBRTtBQUNmLEVBQUMsS0FBTSxDQUFBLE9BQU0sQUFBQyxDQUFDLFNBQVEsQ0FBQyxDQUFDLFFBQVEsQUFBQyxDQUFDLFNBQVMsUUFBTyxDQUFHO0FBQ3JELFVBQU0sSUFBSSxBQUFDLENBQUMsUUFBTyxDQUFDLENBQUE7RUFDckIsQ0FBQyxDQUFBO0FBQ0YsQ0FBQyxBQUFDLEVBQUMsQ0FBQTtBQUNILE1BQU0sSUFBSSxBQUFDLENBQUMsT0FBTSxDQUFDLENBQUE7QUFHbkIiLCJmaWxlIjoiYXN5bmNnZW5fbGlzdGZpbGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgndHJhY2V1ci1zb3VyY2UtbWFwcycpLmluc3RhbGwocmVxdWlyZSgndHJhY2V1cicpKTsvLyBMaXN0IGFsbCBmaWxlcyByZWN1cnNpdmVseSB3aXRoaW4gYSBkaXJlY3Rvcnkgd2l0aCBtYXhpbXVtIHBhcmFsbGVsaXNtXG5sZXQgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxubGV0IGZzID0gcmVxdWlyZSgnZnMnKVxubGV0IHRodW5rZXIgPSByZXF1aXJlKCd0aHVua2VyJylcbmxldCBjbyA9IHJlcXVpcmUoJ2NvJylcbmxldCBfID0gcmVxdWlyZSgnbG9kYXNoJylcblxuZnMgPSB0aHVua2VyKGZzKVxuXG5mdW5jdGlvbiogc3RhdEZpbGUoZmlsZVBhdGgpIHtcblx0bGV0IHN0YXRcblx0dHJ5IHtcblx0XHQvLyBTdGF0IGN1cnJlbnQgZmlsZSBwYXRoXG5cdFx0c3RhdCA9IHlpZWxkIGZzLnN0YXQoZmlsZVBhdGgpXG5cdH0gY2F0Y2goZSkge1xuXHRcdC8vIElnbm9yZSBiYWQgc3ltbGlua3Ncblx0XHRpZiAoZS5jb2RlICE9PSAnRU5PRU5UJykgdGhyb3cgZVxuXHRcdHJldHVybiBbXVxuXHR9XG5cblx0Ly8gSWYgZmlsZSBpcyBhIGRpcmVjdG9yeS4uLlxuXHQvLyByZWN1cnNpdmVseSBsaXN0IGFsbCBmaWxlc1xuXHRpZiAoc3RhdC5pc0RpcmVjdG9yeSgpKSB7XG5cdFx0cmV0dXJuIHlpZWxkIGxpc3REaXIoZmlsZVBhdGgpXG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIGZpbGVQYXRoLnJlcGxhY2UoX19kaXJuYW1lLCAnLicpXG5cdH1cbn1cblxuZnVuY3Rpb24qIGxpc3REaXIoZGlyKSB7XG5cdC8vIEdldCBhbGwgZmlsZW5hbWVzIGluIGN1cnJlbnQgZGlyZWN0b3J5XG5cdGxldCBmaWxlcyA9IHlpZWxkIGZzLnJlYWRkaXIoZGlyKVxuXHRcdCwgZmlsZU5hbWVzXG5cdFx0LCBmaWxlTmFtZXNJdHNcblxuXHQvLyBTdGF0IGFsbCB0aGUgZmlsZW5hbWVzXG5cdGZpbGVOYW1lc0l0cyA9IGZpbGVzLm1hcChmdW5jdGlvbihuYW1lKSB7XG5cdFx0dmFyIGZpbGVQYXRoID0gcGF0aC5qb2luKGRpciwgbmFtZSlcblx0XHRyZXR1cm4gc3RhdEZpbGUoZmlsZVBhdGgpXG5cdH0pXG5cdGZpbGVOYW1lcyA9IHlpZWxkIGZpbGVOYW1lc0l0c1xuXHRyZXR1cm4gXy5mbGF0dGVuKGZpbGVOYW1lcylcbn1cblxuY28oZnVuY3Rpb24qICgpIHtcblx0KHlpZWxkIGxpc3REaXIoX19kaXJuYW1lKSkuZm9yRWFjaChmdW5jdGlvbihmaWxlUGF0aCkge1xuXHRcdGNvbnNvbGUubG9nKGZpbGVQYXRoKVxuXHR9KVxufSkoKVxuY29uc29sZS5sb2coJ2RvbmUuJylcblxuXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=