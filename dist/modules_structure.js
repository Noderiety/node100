"use strict";
require('traceur-source-maps').install(require('traceur'));
var http = require('http'),
    fs = require('fs'),
    minimist = require('minimist'),
    _ = require('lodash'),
    app = require('./app'),
    argv = minimist(process.argv.slice(2)),
    port = argv.port || 8000,
    host = argv.host || '127.0.0.1',
    server,
    options;
function configureSync(options) {
  return options || fs.readFileSync('./configure');
}
options = _.extend(configureSync(options), argv);
server = http.createServer(function(req, res) {
  setTimeout(function() {
    res.end('hello world\n');
  }, 1000);
});
app.listen(port, host, (function() {
  return console.log('Server started on port 8000');
}));
if (process.env.NODE_ENV !== 'production') {
  return require('safeguards').noSynchronousIO(module);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXNfc3RydWN0dXJlLmVzNi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQU0sQUFBQyxDQUFDLHFCQUFvQixDQUFDLFFBQVEsQUFBQyxDQUFDLE9BQU0sQUFBQyxDQUFDLFNBQVEsQ0FBQyxDQUFDLENBQUM7RUFFdEQsQ0FBQSxJQUFHLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxNQUFLLENBQUM7QUFDdEIsS0FBQyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsSUFBRyxDQUFDO0FBRWpCLFdBQU8sRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLFVBQVMsQ0FBQztBQUM3QixJQUFBLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxRQUFPLENBQUM7QUFFcEIsTUFBRSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsT0FBTSxDQUFDO0FBRXJCLE9BQUcsRUFBSSxDQUFBLFFBQU8sQUFBQyxDQUFDLE9BQU0sS0FBSyxNQUFNLEFBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUNyQyxPQUFHLEVBQUksQ0FBQSxJQUFHLEtBQUssR0FBSyxLQUFHO0FBQ3ZCLE9BQUcsRUFBSSxDQUFBLElBQUcsS0FBSyxHQUFLLFlBQVU7QUFFOUIsU0FBSztBQUNMLFVBQU07QUFFVCxPQUFTLGNBQVksQ0FBRSxPQUFNLENBQUc7QUFDL0IsT0FBTyxDQUFBLE9BQU0sR0FBSyxDQUFBLEVBQUMsYUFBYSxBQUFDLENBQUMsYUFBWSxDQUFDLENBQUE7QUFDaEQ7QUFBQSxBQUVBLE1BQU0sRUFBSSxDQUFBLENBQUEsT0FBTyxBQUFDLENBQUMsYUFBWSxBQUFDLENBQUMsT0FBTSxDQUFDLENBQUcsS0FBRyxDQUFDLENBQUE7QUFHL0MsS0FBSyxFQUFJLENBQUEsSUFBRyxhQUFhLEFBQUMsQ0FBQyxTQUFTLEdBQUUsQ0FBRyxDQUFBLEdBQUUsQ0FBRztBQUM3QyxXQUFTLEFBQUMsQ0FBQyxTQUFRLEFBQUMsQ0FBRTtBQUNyQixNQUFFLElBQUksQUFBQyxDQUFDLGVBQWMsQ0FBQyxDQUFBO0VBQ3hCLENBQUcsS0FBRyxDQUFDLENBQUE7QUFDUixDQUFDLENBQUE7QUFHRCxFQUFFLE9BQU8sQUFBQyxDQUFDLElBQUcsQ0FBRyxLQUFHLEdBQUcsU0FBQSxBQUFDO09BQUssQ0FBQSxPQUFNLElBQUksQUFBQyxDQUFDLDZCQUE0QixDQUFDO0FBQUEsRUFBQyxDQUFBO0FBR3ZFLEdBQUksT0FBTSxJQUFJLFNBQVMsSUFBTSxhQUFXLENBQUc7QUFFMUMsT0FBTyxDQUFBLE9BQU0sQUFBQyxDQUFDLFlBQVcsQ0FBQyxnQkFBZ0IsQUFBQyxDQUFDLE1BQUssQ0FBQyxDQUFBO0FBQ3BEO0FBQUEiLCJmaWxlIjoibW9kdWxlc19zdHJ1Y3R1cmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCd0cmFjZXVyLXNvdXJjZS1tYXBzJykuaW5zdGFsbChyZXF1aXJlKCd0cmFjZXVyJykpOy8vIFJlcXVpcmVcbi8vIENvcmUgbW9kdWxlc1xubGV0IGh0dHAgPSByZXF1aXJlKCdodHRwJylcblx0LCBmcyA9IHJlcXVpcmUoJ2ZzJylcbi8vIFBhY2thZ2VzXG5cdCwgbWluaW1pc3QgPSByZXF1aXJlKCdtaW5pbWlzdCcpXG5cdCwgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpXG4vLyBNb2R1bGVzXG5cdCwgYXBwID0gcmVxdWlyZSgnLi9hcHAnKVxuLy8gdmFyaWFibGVzXG5cdCwgYXJndiA9IG1pbmltaXN0KHByb2Nlc3MuYXJndi5zbGljZSgyKSlcblx0LCBwb3J0ID0gYXJndi5wb3J0IHx8IDgwMDBcblx0LCBob3N0ID0gYXJndi5ob3N0IHx8ICcxMjcuMC4wLjEnXG4vLyBVbmRlZmluZWRcblx0LCBzZXJ2ZXJcblx0LCBvcHRpb25zXG5cbmZ1bmN0aW9uIGNvbmZpZ3VyZVN5bmMob3B0aW9ucykge1xuXHRyZXR1cm4gb3B0aW9ucyB8fCBmcy5yZWFkRmlsZVN5bmMoJy4vY29uZmlndXJlJylcbn1cblxub3B0aW9ucyA9IF8uZXh0ZW5kKGNvbmZpZ3VyZVN5bmMob3B0aW9ucyksIGFyZ3YpXG5cbi8vIENvbmZpZ3VyZVxuc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoZnVuY3Rpb24ocmVxLCByZXMpIHtcblx0c2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0XHRyZXMuZW5kKCdoZWxsbyB3b3JsZFxcbicpXG5cdH0sIDEwMDApXG59KVxuXG4vLyBJbml0aWFsaXphdGlvblxuYXBwLmxpc3Rlbihwb3J0LCBob3N0LCAoKSA9PiBjb25zb2xlLmxvZygnU2VydmVyIHN0YXJ0ZWQgb24gcG9ydCA4MDAwJykpXG5cbi8vIEJvb3RzdHJhcCBwcm90ZWN0aW9uXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuXHQvLyBUSElTIE1VU1QgQkUgVEhFIExBU1QgTElORSBFWEVDVVRFRCBJTiBUSEUgTUFJTiBNT0RVTEVcblx0cmV0dXJuIHJlcXVpcmUoJ3NhZmVndWFyZHMnKS5ub1N5bmNocm9ub3VzSU8obW9kdWxlKVxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==