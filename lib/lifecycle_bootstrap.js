"use strict";
require('traceur-source-maps').install(require('traceur'));
var util = require('util'),
    trycatch = require('trycatch'),
    Server = require('./lifecycle_server');
require('songbird');
function requestHandler(req, res) {
  trycatch((function() {
    res.writeHead(200);
    res.write('Hello world\n');
    setTimeout((function() {
      throw new Error('oh... poop');
      res.write('Second statement\n');
      res.end();
    }), 3000);
  }), (function(e) {
    console.log('Error: ', e.stack);
    res.write(e.stack);
    res.end();
  }));
}
var app = new Server(requestHandler, {port: 8000});
app.initialize().then((function() {
  console.log('listening at http://localhost:8000');
}));
if (process.env.NODE_ENV !== 'production') {
  return require('safeguards').noSynchronousIO(module);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpZmVjeWNsZV9ib290c3RyYXAuZXM2LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBTSxBQUFDLENBQUMscUJBQW9CLENBQUMsUUFBUSxBQUFDLENBQUMsT0FBTSxBQUFDLENBQUMsU0FBUSxDQUFDLENBQUMsQ0FBQztFQUd0RCxDQUFBLElBQUcsRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLE1BQUssQ0FBQztBQUV0QixXQUFPLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxVQUFTLENBQUM7QUFFN0IsU0FBSyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsb0JBQW1CLENBQUM7QUFFeEMsTUFBTSxBQUFDLENBQUMsVUFBUyxDQUFDLENBQUE7QUFFbEIsT0FBUyxlQUFhLENBQUUsR0FBRSxDQUFHLENBQUEsR0FBRTtBQUM5QixTQUFPLEFBQUMsRUFBQyxTQUFBLEFBQUM7QUFDVCxNQUFFLFVBQVUsQUFBQyxDQUFDLEdBQUUsQ0FBQyxDQUFBO0FBQ2pCLE1BQUUsTUFBTSxBQUFDLENBQUMsZUFBYyxDQUFDLENBQUE7QUFDekIsYUFBUyxBQUFDLEVBQUMsU0FBQSxBQUFDLENBQUs7QUFDaEIsVUFBTSxJQUFJLE1BQUksQUFBQyxDQUFDLFlBQVcsQ0FBQyxDQUFBO0FBQzVCLFFBQUUsTUFBTSxBQUFDLENBQUMsb0JBQW1CLENBQUMsQ0FBQTtBQUM5QixRQUFFLElBQUksQUFBQyxFQUFDLENBQUE7SUFDVCxFQUFHLEtBQUcsQ0FBQyxDQUFBO0VBQ1IsSUFBRyxTQUFBLENBQUEsQ0FBSztBQUNQLFVBQU0sSUFBSSxBQUFDLENBQUMsU0FBUSxDQUFHLENBQUEsQ0FBQSxNQUFNLENBQUMsQ0FBQTtBQUM5QixNQUFFLE1BQU0sQUFBQyxDQUFDLENBQUEsTUFBTSxDQUFDLENBQUE7QUFDakIsTUFBRSxJQUFJLEFBQUMsRUFBQyxDQUFBO0VBQ1QsRUFBQyxDQUFBO0FBQ0Y7RUFHSSxDQUFBLEdBQUUsRUFBSSxJQUFJLE9BQUssQUFBQyxDQUFDLGNBQWEsQ0FBRyxFQUFDLElBQUcsQ0FBRyxLQUFHLENBQUMsQ0FBQztBQUdqRCxFQUFFLFdBQVcsQUFBQyxFQUFDLEtBQUssQUFBQyxFQUFDLFNBQUEsQUFBQyxDQUFLO0FBRTNCLFFBQU0sSUFBSSxBQUFDLENBQUMsb0NBQW1DLENBQUMsQ0FBQTtBQUNqRCxFQUFDLENBQUE7QUFFRCxHQUFJLE9BQU0sSUFBSSxTQUFTLElBQU0sYUFBVyxDQUFHO0FBRTFDLE9BQU8sQ0FBQSxPQUFNLEFBQUMsQ0FBQyxZQUFXLENBQUMsZ0JBQWdCLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQztBQUNyRDtBQUFBIiwiZmlsZSI6ImxpZmVjeWNsZV9ib290c3RyYXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCd0cmFjZXVyLXNvdXJjZS1tYXBzJykuaW5zdGFsbChyZXF1aXJlKCd0cmFjZXVyJykpOy8vIFN0YXJ0IG9mIG1haW4gdGlja1xuLy8gUmVxdWlyZSBwaGFzZSAoU3luY2hyb25vdXMgSU8gT0spXG4vLyBSZXF1aXJlIENvcmUgbW9kdWxlc1xubGV0IHV0aWwgPSByZXF1aXJlKCd1dGlsJylcbi8vIFJlcXVpcmUgTlBNIG1vZHVsZXNcblx0LCB0cnljYXRjaCA9IHJlcXVpcmUoJ3RyeWNhdGNoJylcbi8vIFJlcXVpcmUgTG9jYWwgbW9kdWxlc1xuXHQsIFNlcnZlciA9IHJlcXVpcmUoJy4vbGlmZWN5Y2xlX3NlcnZlcicpXG5cbnJlcXVpcmUoJ3NvbmdiaXJkJylcblxuZnVuY3Rpb24gcmVxdWVzdEhhbmRsZXIocmVxLCByZXMpIHtcblx0dHJ5Y2F0Y2goKCkgPT4ge1xuXHRcdHJlcy53cml0ZUhlYWQoMjAwKVxuXHRcdHJlcy53cml0ZSgnSGVsbG8gd29ybGRcXG4nKVxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdvaC4uLiBwb29wJylcblx0XHRcdHJlcy53cml0ZSgnU2Vjb25kIHN0YXRlbWVudFxcbicpXG5cdFx0XHRyZXMuZW5kKClcblx0XHR9LCAzMDAwKVxuXHR9LCBlID0+IHtcblx0XHRjb25zb2xlLmxvZygnRXJyb3I6ICcsIGUuc3RhY2spXG5cdFx0cmVzLndyaXRlKGUuc3RhY2spXG5cdFx0cmVzLmVuZCgpXG5cdH0pXG59XG5cbi8vIENvbmZpZ3VyZSBwaGFzZSAoTm8gbW9yZSBzeW5jaHJvbm91cyBJTylcbmxldCBhcHAgPSBuZXcgU2VydmVyKHJlcXVlc3RIYW5kbGVyLCB7cG9ydDogODAwMH0pXG5cbi8vIEluaXRpYWxpemF0aW9uIFBoYXNlIChBc3luY2hyb25vdXMgSU8gT05MWSlcbmFwcC5pbml0aWFsaXplKCkudGhlbigoKSA9PiB7XG5cdC8vIEdlbmVyYWwgRXhlY3V0aW9uIFBoYXNlXG5cdGNvbnNvbGUubG9nKCdsaXN0ZW5pbmcgYXQgaHR0cDovL2xvY2FsaG9zdDo4MDAwJylcbn0pXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG5cdC8vIFRISVMgTVVTVCBCRSBUSEUgTEFTVCBMSU5FIEVYRUNVVEVEIElOIFRIRSBNQUlOIE1PRFVMRVxuXHRyZXR1cm4gcmVxdWlyZSgnc2FmZWd1YXJkcycpLm5vU3luY2hyb25vdXNJTyhtb2R1bGUpO1xufVxuLy8gRW5kIG9mIG1haW4gdGljayAiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=