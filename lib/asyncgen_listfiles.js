"use strict";
require('traceur-source-maps').install(require('traceur'));
var path = require('path');
var fs = require('fs');
var Promise = require('songbird');
var co = require('co');
var _ = require('lodash');
function* statFile(filePath) {
  var stat;
  try {
    stat = yield fs.promise.stat(filePath);
  } catch (e) {
    if (e.code !== 'ENOENT')
      throw e;
    return [];
  }
  if (stat.isDirectory()) {
    return yield listDir(filePath);
  } else {
    return filePath.replace(__dirname, '.');
  }
}
function* listDir(dir) {
  var files = yield fs.promise.readdir(dir),
      fileNames,
      fileNamesIts;
  fileNamesIts = files.map(function(name) {
    var filePath = path.join(dir, name);
    return statFile(filePath);
  });
  fileNames = yield fileNamesIts;
  return _.flatten(fileNames);
}
co(function*() {
  (yield listDir(__dirname)).forEach(function(filePath) {
    console.log(filePath);
  });
})();
console.log('done.');

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jZ2VuX2xpc3RmaWxlcy5lczYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFNLEFBQUMsQ0FBQyxxQkFBb0IsQ0FBQyxRQUFRLEFBQUMsQ0FBQyxPQUFNLEFBQUMsQ0FBQyxTQUFRLENBQUMsQ0FBQyxDQUFDO0VBQ3RELENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDO0VBQ3JCLENBQUEsRUFBQyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsSUFBRyxDQUFDO0VBQ2pCLENBQUEsT0FBTSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsVUFBUyxDQUFDO0VBQzVCLENBQUEsRUFBQyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsSUFBRyxDQUFDO0VBQ2pCLENBQUEsQ0FBQSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsUUFBTyxDQUFDO0FBRXhCLFFBQVUsU0FBTyxDQUFFLFFBQU87SUFDckIsQ0FBQSxJQUFHO0FBQ1AsSUFBSTtBQUVILE9BQUcsRUFBSSxNQUFNLENBQUEsRUFBQyxRQUFRLEtBQUssQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFBO0VBQ3RDLENBQUUsT0FBTSxDQUFBLENBQUc7QUFFVixPQUFJLENBQUEsS0FBSyxJQUFNLFNBQU87QUFBRyxVQUFNLEVBQUEsQ0FBQTtBQUFBLEFBQy9CLFNBQU8sR0FBQyxDQUFBO0VBQ1Q7QUFBQSxBQUlBLEtBQUksSUFBRyxZQUFZLEFBQUMsRUFBQyxDQUFHO0FBQ3ZCLFNBQU8sTUFBTSxDQUFBLE9BQU0sQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFBO0VBQzlCLEtBQU87QUFDTixTQUFPLENBQUEsUUFBTyxRQUFRLEFBQUMsQ0FBQyxTQUFRLENBQUcsSUFBRSxDQUFDLENBQUE7RUFDdkM7QUFBQSxBQUNEO0FBRUEsUUFBVSxRQUFNLENBQUUsR0FBRTtJQUVmLENBQUEsS0FBSSxFQUFJLE1BQU0sQ0FBQSxFQUFDLFFBQVEsUUFBUSxBQUFDLENBQUMsR0FBRSxDQUFDO0FBQ3JDLGNBQVE7QUFDUixpQkFBVztBQUdkLGFBQVcsRUFBSSxDQUFBLEtBQUksSUFBSSxBQUFDLENBQUMsU0FBUyxJQUFHLENBQUc7QUFDdkMsQUFBSSxNQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsSUFBRyxLQUFLLEFBQUMsQ0FBQyxHQUFFLENBQUcsS0FBRyxDQUFDLENBQUE7QUFDbEMsU0FBTyxDQUFBLFFBQU8sQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFBO0VBQ3pCLENBQUMsQ0FBQTtBQUNELFVBQVEsRUFBSSxNQUFNLGFBQVcsQ0FBQTtBQUM3QixPQUFPLENBQUEsQ0FBQSxRQUFRLEFBQUMsQ0FBQyxTQUFRLENBQUMsQ0FBQTtBQUMzQjtBQUVBLENBQUMsQUFBQyxDQUFDLFVBQVUsQUFBQyxDQUFFO0FBQ2YsRUFBQyxLQUFNLENBQUEsT0FBTSxBQUFDLENBQUMsU0FBUSxDQUFDLENBQUMsUUFBUSxBQUFDLENBQUMsU0FBUyxRQUFPLENBQUc7QUFDckQsVUFBTSxJQUFJLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQTtFQUNyQixDQUFDLENBQUE7QUFDRixDQUFDLEFBQUMsRUFBQyxDQUFBO0FBQ0gsTUFBTSxJQUFJLEFBQUMsQ0FBQyxPQUFNLENBQUMsQ0FBQTtBQUduQiIsImZpbGUiOiJhc3luY2dlbl9saXN0ZmlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCd0cmFjZXVyLXNvdXJjZS1tYXBzJykuaW5zdGFsbChyZXF1aXJlKCd0cmFjZXVyJykpOy8vIExpc3QgYWxsIGZpbGVzIHJlY3Vyc2l2ZWx5IHdpdGhpbiBhIGRpcmVjdG9yeSB3aXRoIG1heGltdW0gcGFyYWxsZWxpc21cbmxldCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5sZXQgZnMgPSByZXF1aXJlKCdmcycpXG5sZXQgUHJvbWlzZSA9IHJlcXVpcmUoJ3NvbmdiaXJkJylcbmxldCBjbyA9IHJlcXVpcmUoJ2NvJylcbmxldCBfID0gcmVxdWlyZSgnbG9kYXNoJylcblxuZnVuY3Rpb24qIHN0YXRGaWxlKGZpbGVQYXRoKSB7XG5cdGxldCBzdGF0XG5cdHRyeSB7XG5cdFx0Ly8gU3RhdCBjdXJyZW50IGZpbGUgcGF0aFxuXHRcdHN0YXQgPSB5aWVsZCBmcy5wcm9taXNlLnN0YXQoZmlsZVBhdGgpXG5cdH0gY2F0Y2goZSkge1xuXHRcdC8vIElnbm9yZSBiYWQgc3ltbGlua3Ncblx0XHRpZiAoZS5jb2RlICE9PSAnRU5PRU5UJykgdGhyb3cgZVxuXHRcdHJldHVybiBbXVxuXHR9XG5cblx0Ly8gSWYgZmlsZSBpcyBhIGRpcmVjdG9yeS4uLlxuXHQvLyByZWN1cnNpdmVseSBsaXN0IGFsbCBmaWxlc1xuXHRpZiAoc3RhdC5pc0RpcmVjdG9yeSgpKSB7XG5cdFx0cmV0dXJuIHlpZWxkIGxpc3REaXIoZmlsZVBhdGgpXG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIGZpbGVQYXRoLnJlcGxhY2UoX19kaXJuYW1lLCAnLicpXG5cdH1cbn1cblxuZnVuY3Rpb24qIGxpc3REaXIoZGlyKSB7XG5cdC8vIEdldCBhbGwgZmlsZW5hbWVzIGluIGN1cnJlbnQgZGlyZWN0b3J5XG5cdGxldCBmaWxlcyA9IHlpZWxkIGZzLnByb21pc2UucmVhZGRpcihkaXIpXG5cdFx0LCBmaWxlTmFtZXNcblx0XHQsIGZpbGVOYW1lc0l0c1xuXG5cdC8vIFN0YXQgYWxsIHRoZSBmaWxlbmFtZXNcblx0ZmlsZU5hbWVzSXRzID0gZmlsZXMubWFwKGZ1bmN0aW9uKG5hbWUpIHtcblx0XHR2YXIgZmlsZVBhdGggPSBwYXRoLmpvaW4oZGlyLCBuYW1lKVxuXHRcdHJldHVybiBzdGF0RmlsZShmaWxlUGF0aClcblx0fSlcblx0ZmlsZU5hbWVzID0geWllbGQgZmlsZU5hbWVzSXRzXG5cdHJldHVybiBfLmZsYXR0ZW4oZmlsZU5hbWVzKVxufVxuXG5jbyhmdW5jdGlvbiogKCkge1xuXHQoeWllbGQgbGlzdERpcihfX2Rpcm5hbWUpKS5mb3JFYWNoKGZ1bmN0aW9uKGZpbGVQYXRoKSB7XG5cdFx0Y29uc29sZS5sb2coZmlsZVBhdGgpXG5cdH0pXG59KSgpXG5jb25zb2xlLmxvZygnZG9uZS4nKVxuXG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==