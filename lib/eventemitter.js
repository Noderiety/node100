"use strict";
require('traceur-source-maps').install(require('traceur'));
var EventEmitter = require('events').EventEmitter,
    ee = new EventEmitter();
ee.on('bar', (function() {
  for (var args = [],
      $__0 = 0; $__0 < arguments.length; $__0++)
    $traceurRuntime.setProperty(args, $__0, arguments[$traceurRuntime.toProperty($__0)]);
  console.log(args);
}));
ee.on('bar', (function() {
  for (var args = [],
      $__1 = 0; $__1 < arguments.length; $__1++)
    $traceurRuntime.setProperty(args, $__1, arguments[$traceurRuntime.toProperty($__1)]);
  console.log(args);
}));
setTimeout((function() {
  ee.emit('bar');
  ee.emit('bar', {some: 'data'}, 'world');
  ee.emit('bar', {some: 'data'}, 'y\'all');
}), 2000);
console.log('listening on "foo" & "error" events');

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50ZW1pdHRlci5lczYuanMiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMSIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci8zIiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFNLEFBQUMsQ0FBQyxxQkFBb0IsQ0FBQyxRQUFRLEFBQUMsQ0FBQyxPQUFNLEFBQUMsQ0FBQyxTQUFRLENBQUMsQ0FBQyxDQUFDO0VBQUssQ0FBQSxZQUFXLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxRQUFPLENBQUMsYUFBYTtBQUN6RyxLQUFDLEVBQUksSUFBSSxhQUFXLEFBQUMsRUFBQztBQUV4QixDQUFDLEdBQUcsQUFBQyxDQUFDLEtBQUksR0FBRyxTQUFDLEFBQU07QUNGUixNQUFTLEdBQUEsT0FBb0IsR0FBQztBQUFHLFdBQW9CLEVBQUEsQ0FDaEQsT0FBb0IsQ0FBQSxTQUFRLE9BQU8sQ0FBRyxPQUFrQjtBQUMzRCxBQ0hkLGtCQUFjLFlBQVksQUFBQyxZQ0EzQixDRkdxRCxTQUFRLENFSDNDLGVBQWMsV0FBVyxBQUFDLE1BQWtCLENBQUMsQ0RDakIsQ0RFbUM7QUFBQSxBREMvRSxRQUFNLElBQUksQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0FBQ25CLEVBQUMsQ0FBQztBQUNGLENBQUMsR0FBRyxBQUFDLENBQUMsS0FBSSxHQUFHLFNBQUMsQUFBTTtBQ0xSLE1BQVMsR0FBQSxPQUFvQixHQUFDO0FBQUcsV0FBb0IsRUFBQSxDQUNoRCxPQUFvQixDQUFBLFNBQVEsT0FBTyxDQUFHLE9BQWtCO0FBQzNELEFDSGQsa0JBQWMsWUFBWSxBQUFDLFlDQTNCLENGR3FELFNBQVEsQ0VIM0MsZUFBYyxXQUFXLEFBQUMsTUFBa0IsQ0FBQyxDRENqQixDREVtQztBQUFBLEFESS9FLFFBQU0sSUFBSSxBQUFDLENBQUMsSUFBRyxDQUFDLENBQUM7QUFDbkIsRUFBQyxDQUFDO0FBTUYsU0FBUyxBQUFDLEVBQUMsU0FBQSxBQUFDLENBQUs7QUFDZixHQUFDLEtBQUssQUFBQyxDQUFDLEtBQUksQ0FBQyxDQUFDO0FBQ2QsR0FBQyxLQUFLLEFBQUMsQ0FBQyxLQUFJLENBQUcsRUFBQyxJQUFHLENBQUcsT0FBSyxDQUFDLENBQUcsUUFBTSxDQUFDLENBQUM7QUFDdkMsR0FBQyxLQUFLLEFBQUMsQ0FBQyxLQUFJLENBQUcsRUFBQyxJQUFHLENBQUcsT0FBSyxDQUFDLENBQUcsU0FBTyxDQUFDLENBQUM7QUFFMUMsRUFBRyxLQUFHLENBQUMsQ0FBQTtBQUVQLE1BQU0sSUFBSSxBQUFDLENBQUMscUNBQW9DLENBQUMsQ0FBQTtBQUFBIiwiZmlsZSI6ImV2ZW50ZW1pdHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ3RyYWNldXItc291cmNlLW1hcHMnKS5pbnN0YWxsKHJlcXVpcmUoJ3RyYWNldXInKSk7bGV0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcixcblx0XHRlZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuZWUub24oJ2JhcicsICguLi5hcmdzKSA9PiB7XG4gIGNvbnNvbGUubG9nKGFyZ3MpO1xufSk7XG5lZS5vbignYmFyJywgKC4uLmFyZ3MpID0+IHtcbiAgY29uc29sZS5sb2coYXJncyk7XG59KTtcblxuLy8gZWUub24oJ2Vycm9yJywgZXJyID0+IHtcbi8vIFx0Y29uc29sZS5sb2coZXJyLnN0YWNrKTtcbi8vIH0pO1xuXG5zZXRUaW1lb3V0KCgpID0+IHtcbiAgZWUuZW1pdCgnYmFyJyk7XG4gIGVlLmVtaXQoJ2JhcicsIHtzb21lOiAnZGF0YSd9LCAnd29ybGQnKTtcbiAgZWUuZW1pdCgnYmFyJywge3NvbWU6ICdkYXRhJ30sICd5XFwnYWxsJyk7XG5cdC8vIGVlLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKCdmYWlsJykpO1xufSwgMjAwMClcblxuY29uc29sZS5sb2coJ2xpc3RlbmluZyBvbiBcImZvb1wiICYgXCJlcnJvclwiIGV2ZW50cycpIiwiXG4gICAgICAgICAgICBmb3IgKHZhciAkX19wbGFjZWhvbGRlcl9fMCA9IFtdLCAkX19wbGFjZWhvbGRlcl9fMSA9IDA7XG4gICAgICAgICAgICAgICAgICRfX3BsYWNlaG9sZGVyX18yIDwgYXJndW1lbnRzLmxlbmd0aDsgJF9fcGxhY2Vob2xkZXJfXzMrKylcbiAgICAgICAgICAgICAgJF9fcGxhY2Vob2xkZXJfXzRbJF9fcGxhY2Vob2xkZXJfXzVdID0gYXJndW1lbnRzWyRfX3BsYWNlaG9sZGVyX182XTsiLCIkdHJhY2V1clJ1bnRpbWUuc2V0UHJvcGVydHkoJF9fcGxhY2Vob2xkZXJfXzAsXG4gICAgICAgICAgJF9fcGxhY2Vob2xkZXJfXzEsICRfX3BsYWNlaG9sZGVyX18yKSIsIiRfX3BsYWNlaG9sZGVyX18wWyR0cmFjZXVyUnVudGltZS50b1Byb3BlcnR5KCRfX3BsYWNlaG9sZGVyX18xKV0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=